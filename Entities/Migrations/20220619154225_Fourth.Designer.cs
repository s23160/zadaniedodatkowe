// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zadaniedodatkowe.Entities;

namespace zadaniedodatkowe.Entities.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220619154225_Fourth")]
    partial class Fourth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("zadaniedodatkowe.Entities.Models.Company", b =>
                {
                    b.Property<int>("IdCompany")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCompany");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            IdCompany = 1,
                            CreationDate = new DateTime(2002, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Warszawa",
                            Name = "CD Projekt RED"
                        },
                        new
                        {
                            IdCompany = 2,
                            CreationDate = new DateTime(2004, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Japonia",
                            Name = "FromSoftware"
                        });
                });

            modelBuilder.Entity("zadaniedodatkowe.Entities.Models.Game", b =>
                {
                    b.Property<int>("IdGame")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdGame");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            IdGame = 1,
                            Description = "fajna gra",
                            Name = "Wiedzmin 3",
                            ReleaseDate = new DateTime(2015, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("zadaniedodatkowe.Entities.Models.GameCompany", b =>
                {
                    b.Property<int>("IdGame")
                        .HasColumnType("int");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int");

                    b.HasKey("IdGame", "IdCompany");

                    b.HasIndex("IdCompany");

                    b.ToTable("GameCompany");

                    b.HasData(
                        new
                        {
                            IdGame = 1,
                            IdCompany = 1
                        });
                });

            modelBuilder.Entity("zadaniedodatkowe.Entities.Models.GameCompany", b =>
                {
                    b.HasOne("zadaniedodatkowe.Entities.Models.Company", "Company")
                        .WithMany("GameCompanies")
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("zadaniedodatkowe.Entities.Models.Game", "Game")
                        .WithMany("GameCompanies")
                        .HasForeignKey("IdGame")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("zadaniedodatkowe.Entities.Models.Company", b =>
                {
                    b.Navigation("GameCompanies");
                });

            modelBuilder.Entity("zadaniedodatkowe.Entities.Models.Game", b =>
                {
                    b.Navigation("GameCompanies");
                });
#pragma warning restore 612, 618
        }
    }
}
